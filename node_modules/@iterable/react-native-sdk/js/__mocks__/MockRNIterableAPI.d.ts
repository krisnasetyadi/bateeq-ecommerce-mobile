/// <reference types="jest" />
import { IterableAttributionInfo } from '../Iterable';
import IterableInAppMessage from '../IterableInAppMessage';
export declare class MockRNIterableAPI {
    static email?: string;
    static userId?: string;
    static token?: string;
    static lastPushPayload?: any;
    static attributionInfo?: IterableAttributionInfo;
    static messages?: IterableInAppMessage[];
    static clickedUrl?: string;
    static getEmail(): Promise<string | undefined>;
    static setEmail(email: string, authToken?: string | undefined): void;
    static getUserId(): Promise<string | undefined>;
    static setUserId(userId: string, authToken?: string | undefined): void;
    static disableDeviceForCurrentUser: jest.Mock<any, any>;
    static trackPushOpenWithCampaignId: jest.Mock<any, any>;
    static updateCart: jest.Mock<any, any>;
    static trackPurchase: jest.Mock<any, any>;
    static trackInAppOpen: jest.Mock<any, any>;
    static trackInAppClick: jest.Mock<any, any>;
    static trackInAppClose: jest.Mock<any, any>;
    static trackEvent: jest.Mock<any, any>;
    static getLastPushPayload(): Promise<any | undefined>;
    static getAttributionInfo(): Promise<IterableAttributionInfo | undefined>;
    static setAttributionInfo(attributionInfo?: IterableAttributionInfo): void;
    static initializeWithApiKey: jest.Mock<any, any>;
    static setInAppShowResponse: jest.Mock<any, any>;
    static getInAppMessages(): Promise<IterableInAppMessage[] | undefined>;
    static setAutoDisplayPaused: jest.Mock<any, any>;
    static showMessage(message: IterableInAppMessage, consume: boolean): Promise<string | undefined>;
    static removeMessage: jest.Mock<any, any>;
    static setReadForMessage: jest.Mock<any, any>;
    static inAppConsume: jest.Mock<any, any>;
    static updateUser: jest.Mock<any, any>;
    static updateEmail: jest.Mock<any, any>;
    static handleAppLink: jest.Mock<any, any>;
    static updateSubscriptions: jest.Mock<any, any>;
    static setMessages(messages: IterableInAppMessage[]): void;
    static setClickedUrl(clickedUrl: string): void;
}
