class IterableAction {
    type;
    data;
    userInput;
    constructor(type, data, userInput) {
        this.type = type;
        this.data = data;
        this.userInput = userInput;
    }
    static fromDict(dict) {
        return new IterableAction(dict["type"], dict["data"], dict["userInput"]);
    }
}
class IterableActionContext {
    action;
    source;
    constructor(action, source) {
        this.action = action;
        this.source = source;
    }
    static fromDict(dict) {
        const action = IterableAction.fromDict(dict["action"]);
        const source = dict["source"];
        return new IterableActionContext(action, source);
    }
}
var IterableActionSource;
(function (IterableActionSource) {
    IterableActionSource[IterableActionSource["push"] = 0] = "push";
    IterableActionSource[IterableActionSource["appLink"] = 1] = "appLink";
    IterableActionSource[IterableActionSource["inApp"] = 2] = "inApp";
})(IterableActionSource || (IterableActionSource = {}));
var IterableLogLevel;
(function (IterableLogLevel) {
    IterableLogLevel[IterableLogLevel["debug"] = 1] = "debug";
    IterableLogLevel[IterableLogLevel["info"] = 2] = "info";
    IterableLogLevel[IterableLogLevel["error"] = 3] = "error";
})(IterableLogLevel || (IterableLogLevel = {}));
export { IterableAction, IterableActionContext, IterableActionSource, IterableLogLevel };
