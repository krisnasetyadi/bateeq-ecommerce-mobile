/**
 * `show` to show the in-app otherwise `skip` to skip.
 */
declare enum IterableInAppShowResponse {
    show = 0,
    skip = 1
}
/**
 * `immediate` will try to display the in-app automatically immediately
 * `event` is used for Push to in-app
 * `never` will not display the in-app automatically via the SDK
 */
declare enum IterableInAppTriggerType {
    immediate = 0,
    event = 1,
    never = 2
}
declare class IterableInAppTrigger {
    type: IterableInAppTriggerType;
    constructor(type: IterableInAppTriggerType);
    static fromDict(dict: any): IterableInAppTrigger;
}
declare enum IterableInAppContentType {
    html = 0,
    alert = 1,
    banner = 2
}
declare enum IterableInAppLocation {
    inApp = 0,
    inbox = 1
}
declare enum IterableInAppCloseSource {
    back = 0,
    link = 1,
    unknown = 100
}
declare enum IterableInAppDeleteSource {
    inboxSwipe = 0,
    deleteButton = 1,
    unknown = 100
}
declare class IterableEdgeInsets {
    top: number;
    left: number;
    bottom: number;
    right: number;
    constructor(top: number, left: number, bottom: number, right: number);
    static fromDict(dict: any): IterableEdgeInsets;
}
export interface IterableInAppContent {
    type: IterableInAppContentType;
}
declare class IterableHtmlInAppContent implements IterableInAppContent {
    type: IterableInAppContentType;
    edgeInsets: IterableEdgeInsets;
    html: string;
    constructor(edgeInsets: IterableEdgeInsets, html: string);
    static fromDict(dict: any): IterableHtmlInAppContent;
}
declare class IterableInboxMetadata {
    title?: string;
    subtitle?: string;
    icon?: string;
    constructor(title: string | undefined, subtitle: string | undefined, icon: string | undefined);
    static fromDict(dict: any): IterableInboxMetadata;
}
export { IterableInAppShowResponse, IterableInAppTriggerType, IterableInAppTrigger, IterableInAppContentType, IterableEdgeInsets, IterableHtmlInAppContent, IterableInboxMetadata, IterableInAppLocation, IterableInAppCloseSource, IterableInAppDeleteSource, };
